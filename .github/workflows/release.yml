name: Release CTLGUI

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release'
        required: true
      release_name:
        description: 'Release name'
        required: true

jobs:
  release:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: List build directory
      run: dir ./dist

    - name: Check build directory contents
      run: |
        echo "Checking contents of dist"
        dir ./dist

    - name: Package executable and lib folder
      run: |
        mkdir dist/lib
        cp -r lib/* dist/lib/
        cd dist
    - name: Install dependencies
      run: |
        python -m venv build-env
        build-env\Scripts\activate
        python -m pip install --upgrade pip wheel
        pip install rdkit
        pip install pillow  # Add this line to install PIL (Pillow)
    - name: Build executable with Nuitka
      uses: Nuitka/Nuitka-Action@main
      with:
        nuitka-version: main
        script-name: ctlgui.py
        windows-icon-from-ico: lib/media/nctl.ico
        enable-plugins: tk-inter
        output-dir: dist
        include-data-files: lib/media/*=lib/media/
        lto: yes
        jobs: 4
        windows-console-mode: no

    - name: List build directory
      run: dir ./dist

    - name: Check build directory contents
      run: |
        echo "Checking contents of dist"
        dir ./dist

    - name: Package executable and lib folder
      run: |
        mkdir dist/lib
        cp -r lib/* dist/lib/
        cd dist
        Compress-Archive -Path ctlgui.exe, lib, *.dll, *.pyd, *.so, *.dylib -DestinationPath Chem2Line-${{ github.event.inputs.tag_name }}-Windows-x86_64.zip

    - name: Upload executable artifact
      uses: actions/upload-artifact@v4
      with:
        name: CTLGUI-Executable
        path: dist/Chem2Line-${{ github.event.inputs.tag_name }}-Windows-x86_64.zip
        if-no-files-found: warn
        include-hidden-files: false

    - name: Generate Release Notes
      id: generate_release_notes
      run: |
        echo "## What's New?" > release_notes.md
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0)..HEAD >> release_notes.md

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag_name }}
        release_name: ${{ github.event.inputs.release_name }}
        body_path: release_notes.md
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/Chem2Line-${{ github.event.inputs.tag_name }}-Windows-x86_64.zip
        asset_name: Chem2Line-${{ github.event.inputs.tag_name }}-Windows-x86_64.zip
        asset_content_type: application/zip
